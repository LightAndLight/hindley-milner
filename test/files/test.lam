f x = x

g x = f x

h x = let f = 2 in f

data Maybe a = Just a | Nothing

maybe nothing just m = case m of { Nothing -> nothing; Just a -> just a }

test = maybe 0 f (Just 2)

ifThenElse trueCase falseCase cond = case cond of { true -> trueCase; false -> falseCase }

and a b = case a of { true -> b; false -> false }

data Exception = Exception
