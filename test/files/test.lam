class Eq a where {
  eq : a -> a -> Bool
  }

data Ordering = LT | EQ | GT

class Eq a => Ord a where {
  ord : a -> a -> Ordering
  }

and : Bool -> Bool -> Bool
and a b = case a of {
  true -> b;
  _ -> false
  }

thing : forall a b. (Eq a, Eq b) => a -> b -> Bool
thing a b = and (eq a a) (eq b b)

thing2 : forall a. Eq a => a -> Bool
thing2 a = thing a a
